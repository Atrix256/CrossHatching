//This file is autogenerated by WriteShaderTypesHLSL(), using ShaderTypesList.h as source data

#include "StaticBranches.h"

//----------------------------------------------------------------------------
//Samplers
//----------------------------------------------------------------------------
SamplerState SamplerLinearWrap;
SamplerState SamplerNearestWrap;
SamplerState SamplerAnisoWrap;

//----------------------------------------------------------------------------
//Textures
//----------------------------------------------------------------------------
Texture2D pathTraceOutput;
RWTexture2D<float4> pathTraceOutput_rw;

Texture2D blueNoise256;
RWTexture2D<float4> blueNoise256_rw;

Texture2D circleneg4;
RWTexture2D<float4> circleneg4_rw;

Texture2D circleneg3;
RWTexture2D<float4> circleneg3_rw;

Texture2D circleneg2;
RWTexture2D<float4> circleneg2_rw;

Texture2D circleneg1;
RWTexture2D<float4> circleneg1_rw;

Texture2D circles0;
RWTexture2D<float4> circles0_rw;

Texture2D circles1;
RWTexture2D<float4> circles1_rw;

Texture2D circles2;
RWTexture2D<float4> circles2_rw;

Texture2D circles3;
RWTexture2D<float4> circles3_rw;

Texture2D circles4;
RWTexture2D<float4> circles4_rw;

Texture2DArray circlesarray;

Texture2D dots0;
RWTexture2D<float4> dots0_rw;

Texture2D dots1;
RWTexture2D<float4> dots1_rw;

Texture2D dots2;
RWTexture2D<float4> dots2_rw;

Texture2D dots3;
RWTexture2D<float4> dots3_rw;

Texture2D dots4;
RWTexture2D<float4> dots4_rw;

Texture2D dots5;
RWTexture2D<float4> dots5_rw;

Texture2D dots6;
RWTexture2D<float4> dots6_rw;

Texture2D dots7;
RWTexture2D<float4> dots7_rw;

Texture2DArray dotsarray;

//----------------------------------------------------------------------------
//Constant Buffers
//----------------------------------------------------------------------------
cbuffer ConstantsOnce
{
  float4 width_height_zw;
  float4 cameraPos_FOVX;
  float4 cameraAt_FOVY;
  float4 nearPlaneDist_missColor;
  float4 uvmultiplier_blackPoint_whitePoint_triplanarPow;
  float4 overlayOpacity_yzw;
  uint4 numSpheres_numTris_numOBBs_numQuads;
  uint4 numModels_yzw;
};

cbuffer ConstantsPerFrame
{
  float4 frameRnd_w;
  uint4 sampleCount_samplesPerFrame_zw;
};

//----------------------------------------------------------------------------
//Vertex Formats
//----------------------------------------------------------------------------
struct IMGUI
{
  float4 position_uv : POSITION0;
  float4 color : COLOR0;
};

struct Pos2D
{
  float4 position : POSITION0;
};

//----------------------------------------------------------------------------
//Structured Buffer Types
//----------------------------------------------------------------------------
struct SpherePrim
{
  float4 position_Radius;
  float4 albedo_w;
  float4 emissive_w;
};

struct TrianglePrim
{
  float4 positionA_w;
  float4 positionB_w;
  float4 positionC_w;
  float4 normal_w;
  float4 albedo_w;
  float4 emissive_w;
};

struct QuadPrim
{
  float4 positionA_w;
  float4 positionB_w;
  float4 positionC_w;
  float4 positionD_w;
  float4 normal_w;
  float4 albedo_w;
  float4 emissive_w;
};

struct OBBPrim
{
  float4 position_w;
  float4 radius_w;
  float4 XAxis_w;
  float4 YAxis_w;
  float4 ZAxis_w;
  float4 albedo_w;
  float4 emissive_w;
};

struct ModelPrim
{
  float4 position_Radius;
  uint4 firstTriangle_lastTriangle_zw;
};

struct ModelTrianglePrim
{
  float4 positionA_w;
  float4 positionB_w;
  float4 positionC_w;
  float4 normal_w;
  float4 albedo_w;
  float4 emissive_w;
};

struct FirstRayHit
{
  float4 surfaceNormal_intersectTime;
  float4 albedo_w;
  float4 emissive_w;
};

//----------------------------------------------------------------------------
//Structured Buffers
//----------------------------------------------------------------------------
StructuredBuffer<SpherePrim> Spheres;

StructuredBuffer<TrianglePrim> Triangles;

StructuredBuffer<QuadPrim> Quads;

StructuredBuffer<OBBPrim> OBBs;

StructuredBuffer<ModelPrim> Models;

StructuredBuffer<ModelTrianglePrim> ModelTriangles;

StructuredBuffer<FirstRayHit> FirstRayHits;
RWStructuredBuffer<FirstRayHit> FirstRayHits_rw;

