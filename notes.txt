* get rid of depth, depth test, and back face culling

i think i'll need a deferred renderer type setup? I'll have an intermediary buffer that has uv and intensity that i will then process with the shader.

i don't think we need a depth buffer since it'll all be path traced, so remove that (eventually)

a way to specify a scene? list spheres and meshes. they get loaded and passed through to the scene.

allow a way to specify screen w/h and fullscreen. Command line?

show fps / mspf

test x64 and release

TODO's

Figure out how to get labels that show up in renderdoc

Sean said he'd be willing to give me textures.

Work with sean for the franklin booth technioque?

? how do we make sure we don't write outside of the bounds in the compute shaders?

clean up code (spaces after function names etc)

? should i add an assert / asserts everywhere?

? I'm thinking we probably want window borders / close button on this window.

? do we need render target stuff? maybe make the d3d class use it for the main render target?

* get rid of un-needed shaders etc when things are working well!

================================= HIGH LEVEL GOALS =================================

1) path trace diffuse / emissive of a scene with a mesh. (monochromatic?)
2) use the brightness values to determine which tileable crosshatching texture to use (trilinear filtering w/ volume texture)
3) success!
4) maybe multiple scenes and some debug displays and such. (IMGUI? Or rely on renderdoc?)

================================= NOTES =================================

DX11 guid: http://www.rastertek.com/dx11tut02.html

